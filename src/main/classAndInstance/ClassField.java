package main.classAndInstance;

/**
 * 클래스의 각 멤버들은 정의되어 있는 영역과 선언시에 사용하는 키워드 등으로 인해서 종류가 달라진다.
 * 각각의 종류에 따라서 사용되고 관리되는 방식이나 메모리에 올라가는 시점 등이 달라지기 때문에 어느 영역에 선언되었는지 잘 유의해야한다.
 */
public class ClassField {
    /**
     * member variables
     * 
     * 변수는 클래스 변수, 인스턴스 변수, 지역 변수 세 종류로 나뉜다.
     * 변수는 선언된 영역과 static 키워드의 유무 등으로 종류가 나뉜다.
     */

    /**
     * 인스턴스 변수
     * 
     * 클래스 영역에 선언된 변수이다.
     * 클래스의 인스턴스가 생성될 때 해당 변수도 함께 생성된다.
     * 자바에서 각 인스턴스는 독립된 저장 공간을 가지기 때문에 같은 클래스에서 만들어져도 각 인스턴스가 서로 다른 값을 가질 수 있다.
     * 인스턴스 별로 고유한 값을 유지해야 하는 속성의 경우 인스턴스 변수로 선언한다.
     */
    int instanceVar;

    /**
     * 클래스 변수
     * 
     * 클래스 영역에 선언된 변수로 인스턴스 변수와 달리 static 키워드를 사용하여 선언된다.
     * 클래스가 메모리에 올라갈 때 생성된다.
     * 인스턴스 변수는 각 인스턴스 마다 독립적인 속성을 가질 수 있도록 하는 반면에
     * 클래스 변수는 해당 클래스를 통해 생성된 인스턴스들이 모두 같은 클래스 변수를 참조하게 된다.
     * 이러한 성질 때문에 모든 인스턴스가 같은 값을 유지해야 하는 경우 클래스 변수로 선언하여 관리한다.
     * 
     * 클래스 변수는 인스턴스 변수와 달리 인스턴스를 생성하지 않고 '클래스이름.클래스변수이름' 의 형식으로 사용할 수 있다.
     */
    static int classVar; // 

    public void func() {
        /**
         * 지역 변수
         * 
         * 메서드나 반복문, 조건문 등 블럭으로 지정된 영역 내에 선언되어 해당 여역 내에서만 사용 가능하다.
         * 해당 블럭에서 탈출하면 지역변수도 함께 소멸되어 더이상 사용할 수 없다.
         */
        int localVar;
    }

    /**
     * method
     * 
     * 메서드는 특정 기능을 클래스에 함수로 구현한 것이다.
     * 
     * 메서드는 선어부와 구현부로 이루어져 있다.
     * 메서드의 선언부는 메서드의 이름과 매개변수 선언, 그리고 반환타입으로 구성되어있다.
     * 메서드의 구현부는 메서드의 선언부 다음에 오는 블럭 부분으로 실제 메서드의 기능이 구현되어있다.
     * 메서드의 반환타입이 void 가 아닌 경우, 구현부는 return 문을 포함해야한다.
     */
    public void method(int num, String str) {
        System.out.println(num + " " + str);
    }

    /**
     * static 메서드는 클래스 변수와 같이 인스턴스 생성없이 클래스 이름만으로 사용할 수 있다.
     * 그 말은 인스턴스 생성 전에도 호출할 수 있기 때문에 인스턴스 생성 시에 만들어지는 인스턴스 변수는 메서드 안에서 사용할 수 없다.
     * 만약에 인스턴스 변수를 사용하지 않는 다면 static 을 붙이는 것을 고려해보는 것이 좋다.
     */
    public static void staticMethod() {
        System.out.println("static method");
    }
}
